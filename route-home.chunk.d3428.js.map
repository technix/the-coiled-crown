{"version":3,"sources":["webpack:///./components/routes/home.js"],"names":["HomeRoute","atrament","useContext","Atrament","_gamestate$metadata","useStore","store","metadata","title","author","_useState2","_slicedToArray","useState","canBeResumed","setResumeState","useEffect","_ref","_asyncToGenerator","canResumeGame","game","canResume","apply","arguments","initHome","newGame","useCallback","start","save","route","h","Container","ContainerFlex","Settings","Header","src","style","width","concat","Block","align","LinkMenu","key","onClick"],"mappings":"qhDAoDeA,UA3CG,WAChB,IAAMC,EAAWC,YAAWC,KAG5BC,EAFkBC,YAASJ,EAASK,SAEAC,SAA5BC,EAAKJ,EAALI,MAAOC,EAAML,EAANK,OAEyCC,EAAAC,EAAfC,aAAS,GAAM,GAAhDC,EAAYH,EAAA,GAAEI,EAAcJ,EAAA,GACpCK,aAAU,WAAM,IAAAC,GACG,YAAHA,KAAAC,GAAG,YACf,IAAMC,QAAsBjB,EAASkB,KAAKC,YAC1CN,IAAiBI,EACnB,KAACG,MAAA,KAAAC,UAAA,CACDC,EACF,GAAG,CAAEtB,EAASkB,OAEd,IAAMK,EAAUC,YAAWR,GAAC,kBACpBhB,EAASkB,KAAKO,cACdzB,EAASkB,KAAKQ,OACpBC,YAAM,QACR,IAAG,CAAE3B,EAASkB,OAKd,OACEU,YAACC,IAAS,KACRD,YAACE,IAAa,KACZF,YAACG,IAAQ,MACTH,YAACI,IAAM,KACLJ,YAAA,OAAKK,IAAI,+BAA+BC,MAAO,CAACC,MAAO,SACvDP,YAAA,UAAKrB,GAAgB,eACrBqB,YAAA,SAAIpB,EAAS,MAAH4B,OAAS5B,GAAW,qBAEhCoB,YAACS,IAAK,CAACC,MAAM,OACV1B,EAAegB,YAACW,IAAQ,CAACC,IAAI,eAAeC,QAblC,WAAH,OAASd,YAAM,QAAQ,GAamC,YAAsB,GACxFC,YAACW,IAAQ,CAACC,IAAI,YAAYC,QAASlB,GAAS,YAC5CK,YAACW,IAAQ,CAACC,IAAI,QAAQC,QAdZ,WAAH,OAASd,YAAM,SAAS,GAcW,WAKpD,C","file":"route-home.chunk.d3428.js","sourcesContent":["import { h } from 'preact';\nimport { route } from 'preact-router';\nimport { useContext, useEffect, useState, useCallback } from 'preact/hooks';\nimport { useStore } from '@nanostores/preact';\nimport Atrament from 'src/atrament-context';\n\nimport { Block, Container, ContainerFlex, Header, LinkMenu } from 'src/components/ui';\nimport Settings from 'src/components/screens/settings';\n\nconst HomeRoute = () => {\n  const atrament = useContext(Atrament);\n  const gamestate = useStore(atrament.store());\n\n  const { title, author } = gamestate.metadata;\n\n  const [ canBeResumed, setResumeState ] = useState(false);\n  useEffect(() => {\n    const initHome = async () => {\n      const canResumeGame = await atrament.game.canResume();\n      setResumeState(!!canResumeGame);\n    }\n    initHome();\n  }, [ atrament.game ]);\n\n  const newGame = useCallback(async () => {\n    await atrament.game.start();\n    await atrament.game.save();\n    route('/game');\n  }, [ atrament.game ]);\n\n  const resumeGame = () => route('/game');\n  const aboutGame = () => route('/about');\n\n  return (\n    <Container>\n      <ContainerFlex>\n        <Settings />\n        <Header>\n          <img src='assets/game/images/cover.jpg' style={{width: '50%'}} />\n          <h1>{title ? title : \"Atrament UI\"}</h1>\n          <p>{author ? `by ${author}` : \"Test application\"}</p>\n        </Header>\n        <Block align='end'>\n          {canBeResumed ? <LinkMenu key=\"continuegame\" onClick={resumeGame}>Continue</LinkMenu> : ''}\n          <LinkMenu key=\"startgame\" onClick={newGame}>New game</LinkMenu>\n          <LinkMenu key=\"about\" onClick={aboutGame}>About</LinkMenu>\n        </Block>\n      </ContainerFlex>\n    </Container>\n  );\n};\n\nexport default HomeRoute;"],"sourceRoot":""}